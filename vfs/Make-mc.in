# This is the "Makefile.in" that is used when vfs is built as part of mc.
# Makefile.am is for the standalone VFS library.
# Please keep them in sync.

VERSION = @VERSION@

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
top_builddir = ..

# Installation target directories & other installation stuff
prefix = @prefix@
exec_prefix = @exec_prefix@
binprefix =
manprefix =

bindir     = @bindir@
libdir	   = @libdir@

# Tools & program stuff
@SET_MAKE@
CC = @CC@
CPP = @CPP@
AR = @AR@
RANLIB = @RANLIB@
RMF = rm -f
MV = mv
CP = cp
LN_S = @LN_S@

XCFLAGS = @CFLAGS@
XCPPFLAGS = -I$(srcdir) -I.. @CPPFLAGS@ @GLIB_CFLAGS@
XLDFLAGS = @LDFLAGS@
XDEFS = @DEFS@
XLIBS = @LIBS@

# Rules
default: all

.PHONY: default all check TAGS clean install uninstall distcopy depend

# Added for compatibility with Automake
dvi:

installcheck:

SAMBA_INCLUDES =

CFLAGS   = $(XCFLAGS)
CPPFLAGS = $(XCPPFLAGS) -I. $(SAMBA_INCLUDES)
LDFLAGS  = $(XLDFLAGS)
DEFS     = $(XDEFS)
LIBS     = @SHADOWLIB@ $(XLIBS) @TERMNET@ @PAMLIBS@ @LCRYPT@ $(XLIB)
INSTALL  = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ -m 755
INSTALL_DATA = @INSTALL_DATA@
AR = @AR@

#
# VFS code
#
@USE_SAMBA_FS_TRUE@SMB_NETFILES = smbfs.o
@USE_SAMBA_FS_FALSE@SMB_NETFILES =
NETFILES   = tcputil.o fish.o ftpfs.o mcfs.o utilvfs.o $(SMB_NETFILES)

SAMBA_DIST =			\
	Makefile.in		\
	acconfig.h		\
	aclocal.m4		\
	architecture.doc	\
	configure.in		\
	configure		\
	internals.doc		\
	parsing.doc		\
	include/byteorder.h	\
	include/charset.h	\
	include/client.h	\
	include/config.h.in	\
	include/dlinklist.h	\
	include/includes.h	\
	include/kanji.h		\
	include/local.h		\
	include/nameserv.h	\
	include/ntdomain.h	\
	include/nterr.h		\
	include/proto.h		\
	include/rpc_dce.h	\
	include/rpc_lsa.h	\
	include/rpc_misc.h	\
	include/rpc_netlogon.h	\
	include/rpc_reg.h	\
	include/rpc_samr.h	\
	include/rpc_secdes.h	\
	include/rpc_srvsvc.h	\
	include/rpc_wkssvc.h	\
	include/rpcclient.h	\
	include/smb.h		\
	include/stamp-h.in	\
	include/trans2.h	\
	include/version.h	\
	lib/charcnv.c		\
	lib/charset.c		\
	lib/debug.c		\
	lib/doscalls.c		\
	lib/genrand.c		\
	lib/interface.c		\
	lib/kanji.c		\
	lib/md4.c		\
	lib/netmask.c		\
	lib/signal.c		\
	lib/slprintf.c		\
	lib/system.c		\
	lib/time.c		\
	lib/username.c		\
	lib/util.c		\
	lib/util_file.c		\
	lib/util_sock.c		\
	lib/util_str.c		\
	lib/util_unistr.c	\
	libsmb/clientgen.c	\
	libsmb/namequery.c	\
	libsmb/nmblib.c		\
	libsmb/nterr.c		\
	libsmb/pwd_cache.c	\
	libsmb/smbdes.c		\
	libsmb/smbencrypt.c	\
	libsmb/smberr.c		\
	param/loadparm.c	\
	param/params.c		\
	tests/README		\
	tests/ftruncate.c	\
	tests/getgroups.c	\
	tests/summary.c		\
	tests/trivial.c

NONETFILES = 			\
	cpio.o			\
	direntry.o		\
	extfs.o 		\
	local.o 		\
	names.o			\
	tar.o			\
	sfs.o			\
	vfs.o @undelfs_o@

VFSSRCS = \
	container.c 		\
	cpio.c			\
	direntry.c		\
	extfs.c 		\
	ftpfs.c 		\
	fish.c 			\
	local.c 		\
	local.h			\
	mcfs.c			\
	names.c 		\
	mcserv.c 		\
	sfs.c 			\
	smbfs.c			\
	tar.c 			\
	tcputil.c		\
	undelfs.c 		\
	utilvfs.c		\
	vfs.c

VFSHDRS = 			\
	container.h 		\
	extfs.h 		\
	fish.h			\
	ftpfs.h 		\
	mcfs.h 			\
	names.h 		\
	smbfs.h			\
	tar.h 			\
	tcputil.h 		\
	utilvfs.h		\
	vfs.h			\
	xdirentry.h

VFSOBJS = $(NONETFILES) @NETFILES@

Makefile: $(srcdir)/Make-mc.in $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_FILES=vfs/Makefile:vfs/Make-mc.in \
	  CONFIG_HEADERS= $(SHELL) ./config.status


#
# Distribution variables
#

DISTVFS = Make-mc.in ChangeLog callback.h README README.fish \
	$(VFSSRCS) $(VFSHDRS)

all: all-recursive all-local

all-recursive:
	cd extfs && $(MAKE) all

@USE_VFS_TRUE@all-local: libvfs-mc.a @mcserv@
@USE_VFS_FALSE@all-local: @mcserv@

.c.o:
	$(CC) -c $(CPPFLAGS) $(DEFS) $(CFLAGS) $<

check:
	@echo no tests are supplied.

SRC_LINKS = mad.c mad.h

$(SRC_LINKS):
	for i in $(SRC_LINKS); do \
		$(LN_S) $(top_srcdir)/src/$$i . || exit 1; \
	done

mcserv: mcserv.o tcputil.o mad.o
	$(CC) $(LDFLAGS) -o mcserv mcserv.o tcputil.o mad.o $(LIBS)

@USE_SAMBA_FS_TRUE@libvfs-mc.a: $(VFSOBJS) samba/libsamba.a
@USE_SAMBA_FS_FALSE@libvfs-mc.a: $(VFSOBJS)
	rm -f $@
@USE_SAMBA_FS_TRUE@	cp -f samba/libsamba.a libtmp.a
@USE_SAMBA_FS_TRUE@	$(AR) r libtmp.a $(VFSOBJS)
@USE_SAMBA_FS_TRUE@	mv libtmp.a $@
@USE_SAMBA_FS_FALSE@	$(AR) cr $@ $(VFSOBJS)
	$(RANLIB) $@

samba/libsamba.a:
	cd samba && $(MAKE) libsamba.a

TAGS: $(VFSSRCS)
	etags $(VFSSRCS)

mostlyclean:
	(cd extfs && $(MAKE) mostlyclean)
	if test -f samba/Makefile; then \
	  (cd samba && $(MAKE) mostlyclean); \
	else :;	fi
	rm -f *.o core a.out $(VFSSOOBJS)

clean: mostlyclean
	(cd extfs && $(MAKE) clean)
	if test -f samba/Makefile; then \
	  (cd samba && $(MAKE) clean); \
	else :;	fi
	rm -f mcserv *.a *.so

distclean: clean
	(cd extfs && $(MAKE) distclean)
	if test -f samba/Makefile; then \
	  (cd samba && $(MAKE) distclean); \
	else :;	fi
	rm -f $(SRC_LINKS)
	rm -f TAGS
	rm -f *~
	rm -f Makefile

install: all-local install-local install-recursive

install-local:
@MCSERV_INSTALL_TRUE@	$(mkinstalldirs) $(DESTDIR)$(bindir)
@MCSERV_INSTALL_TRUE@	$(INSTALL_PROGRAM) mcserv \
@MCSERV_INSTALL_TRUE@	  $(DESTDIR)$(bindir)/$(binprefix)mcserv

install-recursive:
	cd extfs && $(MAKE) install

uninstall:
	(cd extfs && $(MAKE) uninstall)
	rm -f $(DESTDIR)$(bindir)/$(binprefix)mcserv

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

distdir:
	for I in $(DISTVFS); \
	  do cp -p $(srcdir)/$$I $(distdir) || exit 1; \
	done
	$(mkinstalldirs) $(distdir)/extfs
	(cd extfs && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) \
		distdir=../$(distdir)/extfs distdir) || exit 1
	mkdir $(distdir)/samba
	mkdir $(distdir)/samba/include
	mkdir $(distdir)/samba/lib
	mkdir $(distdir)/samba/libsmb
	mkdir $(distdir)/samba/param
	mkdir $(distdir)/samba/tests
	for I in $(SAMBA_DIST); do \
	  cp -p $(srcdir)/samba/$$I $(distdir)/samba/$$I \
	  || exit 1; done
	
depend:

