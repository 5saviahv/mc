# Makefile.BC5
#
# Midnight Commander for Win32 makefile
# for Borland C++ 5.01
#
# Hacked by Dan Nicolaescu from Visual IDE mak
# Hacked by Pavel Roskin to make it work with cmd.exe from Windows NT4
# 980206 hacked by Pavel Roskin to make it work with GNU make
# 980316 hacked by Pavel Roskin to make it work with Borland C++
# --------------------------------------------------------------------------

MC_LIBS=

# ---- Path (case-sensitive!) is searched for executables
#      If the command line contains quotes, it is passed to shell
#      Errors are ignored in this case!
Path=c:/bc5/bin
CC=bcc32.exe
#      Just comment RSC out if you have problems with resources
# RSC=rc.exe
LINK=bcc32.exe
OBJ_SUFFIX=obj
OBJ_PLACE=-o
RES_PLACE=-fo
EXE_PLACE=-e

# ---- Compiler-specific optional stuff
MC_MISC_CFLAGS=

ifndef RELEASE
# ---- Debug build
OBJS_DIR=debug
EXTRA_MC_SRCS=util.debug.c
SPECIFIC_DEFINES=-DHAVE_TRACE
SPECIFIC_MC_CFLAGS=-v -y $(MC_MISC_CFLAGS)
SPECIFIC_MC_LFLAGS_EXTRA=-v -y -lm
SPECIFIC_SLANG_CFLAGS=$(SPECIFIC_MC_CFLAGS)
SPECIFIC_MCEDIT_CFLAGS=$(SPECIFIC_MC_CFLAGS) -I../edit -I../src
RC_DEFINES=-D_DEBUG
else
# ---- Release build
OBJS_DIR=release
EXTRA_MC_SRCS=
SPECIFIC_DEFINES=
SPECIFIC_MC_CFLAGS=$(MC_MISC_CFLAGS)
SPECIFIC_MC_LFLAGS_EXTRA=
SPECIFIC_SLANG_CFLAGS=$(SPECIFIC_MC_CFLAGS)
SPECIFIC_MCEDIT_CFLAGS=$(SPECIFIC_MC_CFLAGS) -I../edit -I../src
RC_DEFINES=-DRELEASE=$(RELEASE)
endif

MC_EXE=$(OBJS_DIR)/mc.exe

# ---- Compiler independent defines
include Makefile.NT

# ---- Linkers are usualy compiler-specific
SPECIFIC_MC_LFLAGS= \
	$(SPECIFIC_MC_LFLAGS_EXTRA)

$(MC_EXE): $(MC_RES) $(OBJS) $(MCEDIT_OBJS) $(SLANG_OBJS)
	$(LINK) $(EXE_PLACE)$(MC_EXE) $(MC_LIBS) $(SPECIFIC_MC_LFLAGS) $+
