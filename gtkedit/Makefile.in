srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
top_builddir = ..

@MCF@

CFLAGS = $(XCFLAGS)
CPPFLAGS = $(XCPPFLAGS) @GNOME_INCLUDEDIR@ -I$(top_srcdir)
LDFLAGS = $(XLDFLAGS) 
DEFS = $(XDEFS)
LIBS = @SHADOWLIB@ $(XLIBS) @TERMNET@ @PAMLIBS@ $(XLIB)
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
AR = @AR@

#
# Distribution variables
#

EDITSRC = edit.c editcmd.c editdraw.c gtkedit.c gtkeditkey.c \
	propfont.c syntax.c wordproc.c edit.h editcmddef.h global.h \
	gtkedit.h lkeysym.h editmenu.c editoptions.c \
	editwidget.c bookmark.c edit-widget.h xdnd.h

EDITOBJS = edit.o editcmd.o editdraw.o gtkedit.o gtkeditkey.o \
	propfont.o syntax.o wordproc.o bookmark.o

DIST = 	ChangeLog Makefile.in $(EDITSRC)

all: @libgtkedit@

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && CONFIG_FILES=gtkedit/Makefile CONFIG_HEADERS= $(SHELL) ./config.status

.c.o:
	$(CC) -c $(CPPFLAGS) $(DEFS) $(CFLAGS) -DHAVE_X -DHAVE_GNOME -DGTK $<

check:
	@echo no tests are supplied.

libgtkedit.a: $(EDITOBJS)
	rm -f $@
	$(AR) cr $@ $(EDITOBJS)
	-$(RANLIB) $@

mcedit:
	rm -f $(DESTDIR)$(bindir)/$(binprefix)mcedit
	$(LN_S) mc $(DESTDIR)$(bindir)/$(binprefix)mcedit

TAGS: $(EDITSRC)
	etags $(EDITSRC)

mostlyclean:
	rm -f *.o core a.out

clean: mostlyclean
	rm -f libgtkedit.a

distclean: clean
	rm -f TAGS
	rm -f *~
	rm -f Makefile

install:

uninstall:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

distdir:
	for I in $(DIST); \
	  do cp -p $(srcdir)/$$I $(distdir) || exit 1; \
	done

depend:

