.TH MCEDIT 1 "May 2010" "MC Version 4.7.x" "GNU Midnight Commander"
.SH "НАИМЕНОВАНИЕ"
mcedit \- встроенные редактор файлов в GNU Midnight Commander.
.SH "ИСПОЛЬЗОВАНИЕ"
.B mcedit
[\-bcCdfhstVx?] [+номер строки] ИмяФайла
.PP
.B mcedit
[\-bcCdfhstVx?] file:номер строки[:]
.SH "ОПИСАНИЕ"
.LP
mcedit это символическая ссылка на
.BR mc ,
главный исполняемый файл GNU Midnight Commander.
Вызов GNU Midnight Commander при помощи данного имени
запускает внутренний редактор и открывает
.I file
файл указанный в командной строке. Редактор основан на консольной версии редактора
.B cooledit
\- независимой программы написанной под X Window System.
.SH "ПАРАМЕТРЫ"
.TP
.I "+номер строки"
Перейти на строку с указанным номером (не ставьте пробел между символом
.I "+"
и числом).
.TP
.I "\-b"
Принудительное переключение в чёрно-белый режим.
.TP
.I "\-c"
Принудительное переключение в режим ANSI на терминалах которые,
вероятно, не имеют поддержки  цветов.
.TP
.I "\-C <keyword>=<FGcolor>,<BGcolor>:<keyword>= ..."
Переопределение цветовой схемы. Дополнительная информация в разделе
.B Colors ,
в man mc (1)
.TP
.I "\-d"
Отключить поддержку мыши.
.TP
.I "\-f"
Отобразить вкомпилированный путь поиска файлов данных GNU Midnight Commander.
.TP
.I "\-t"
Принудительное использование базы termcap вместо terminfo.
Эта опция применяется только если GNU Midnight Commander
был скомпилирован с библиотекой S\-Lang c включенной поддержкой terminfo.
.TP
.I "\-V"
Вывод версии программы.
.TP
.I "\-x"
Принудительное включение режима xterm. Используется при работе в
xterm\-совместимых терминалах (двух оконный режим и возможность отправлять
сообщения мыши в виде escape\-последовательностей).
.SH "ОСОБЕННОСТИ"
Встроенный редактор это полнофункциональный полно-экранный редактор.
Позволяет редактировать файлы размером не более 64 мегабайт. Также можно
редактировать бинарные файлы. Функции которые в настоящее время поддерживаются:
копирование, перемещение, удаление, вырезка, вставка помеченного текста;
операция отмены; выпадающее меню; вставка текста из файла; макросы, регулярные
выражения поиска и замены; выделение текста с помощью Shift\-стрелки  (если
поддерживается терминалом); режим замены текста при вводе; авто\-перенос слов;
авто-отступ; настраиваемый размер табуляции; подсветка синтаксиса для различных
типов файлов, а также возможность передачи текстовых блоков через pipe, для
дальнейшей обработки внешними утилитами такими как indent или ispell.
.SH "КЛЮЧИ"
Редактор прост в использовании и может использоваться без предварительного
изучения документации. Выпадающее меню вызывается клавишей F9. В меню программы
и в нижней панели вы сможете ознакомиться также и с другими "горячими" клавишами.
.PP
Дополнительно к этому вы можете использовать клавишу Shift совместно со
стрелками для пометки текста (если поддерживается терминалом):
.B Ctrl\-Ins
копирует помеченный текст в файл
.BR ~/.mc/cedit/cooledit.clip ,
.B Shift\-Ins
вставляет содержимое
.BR ~/.mc/cedit/cooledit.clip ,
.B Shift\-Del
вырезает помеченное в файл
.BR ~/.mc/cedit/cooledit.clip ,
и
.B Ctrl\-Del
удаляет помеченный текст. Также на некоторых терминалах работает
выделение с помощью мыши . Для стандартной для терминалов пометки,
удерживайте клавишу Shift. Пожалуйста имейте ввиду что стандартная
пометка текста не распространяется на клипборд
.BR mcedit .
.PP
Функция дополнения текста (сочетание
.B "Meta\-Tab"
или
.BR "Escape Tab" )
завершает слово под курсором с использованием слов которые уже использовались
ранее в данном файле.
.PP
Для определения макроса нажмите
.B Ctrl\-R
и нажмите клавиши которые Вы хотите записать. Нажмите
.B Ctrl\-R
еще раз для завершения. Далее Вы можете назначить макросу клавишу нажав ее.
Для выполнения макроса нажмите
.B Ctrl\-A
, а затем ассоциированную с ним клавишу. Также макрос исполняется если нажата
клавиша Meta, Ctrl, или Esc и клавиша ассоциированная с макросом, если данная
комбинация не назначена какой-либо функции редактора. Записанные макросы хранятся в
.BR ~/.mc/cedit/cooledit.macros .
Do NOT edit this file if you are going to use macros again in the same
editing session, because
.B mcedit
caches macro key defines in memory.
.B mcedit
now overwrites a macro if a macro with the same key already exists,
so you won't have to edit this file. You will also have to restart
other running editors for macros to take effect.
.P
.B F19
F19 позволит отформатировать помеченный код на языках C, C++, Java или HTML.
Этим занимается скрипт
.B ~/.mc/cedit/edit.indent.rc
созданный из готового шаблона. Вы можете изменить его так как вам будет удобнее.
.PP
.B C\-p
запустит ispell для блока текста. Будет выполнен скрипт
.BR ~/.mc/cedit/edit.spell.rc .
.PP
В случае, если какие-либо клавиши не работают, Вы можете воспользоваться диалогом
.B "Распознавание клавиш"
в меню 
.B  "Настройки"
.SH CODE NAVIGATION
.B mcedit
can be used to navigation through code with tags files created by etags
or ctags commands. If there is no file TAGS code navigation would not work.
In example, in case of exuberant\-ctags for C language command will be:
.PP
ctags \-e \-\-language\-force=C \-R ./
.PP
.B Meta\-Enter 
show list box to select item under cursor (cusor should stand at end of
word).
.PP
.B Meta\-Minus 
where minus is symbol "\-" go to previous function in navigation list (like a browser
Back).
.PP
.B Meta\-Equal
where equal is symbol "=" go to next function in navigation list (like a browser
Forward).
.PP
.SH "ПОДСВЕТКА СИНТАКСИСА"
.B mcedit
поддерживает подсветку синтаксиса. Это означает, что ключевые слова
и контексты (такие как комментарии, строковые константы и т.д.)
будут подсвечены разными цветами. Этот раздел описывает формат файла
.BR ~/.mc/cedit/Syntax .
Если этот файл отсутствует то используется системный файл
.B @prefix@/share/mc/syntax/Syntax
Файл
.B ~/.mc/cedit/Syntax
перечитывается при открытии каждого нового редактора. В файле содержатся
правила подсветки, каждое из которых записано с новой строки, и которые
определяют, какие из ключевых слов каким цветом подсвечиваются.
.PP
Также файл
разделён на секции, каждая из которых, начинается со строки с командой
.B file
и регулярным выражением следующим за ней.
The sections are normally put into separate files using the
.B include
command.
.PP
The
.B file
command has three arguments.  The first argument is a regular expression
that is applied to the file name to determine if the following section
applies to the file.  The second argument is the description of the file
type.  It is used in
.BR cooledit ;
future versions of
.B mcedit
may use it as well.
Третий параметр (необязательный) \- регулярное выражение соответствующее
первой строке текста из файла. Если любое из регулярных выражений, по
имени или по первой строке, совпадёт, то правила будут загружены.
.PP
Секция оканчивается началом новой секции. Каждая секция разделена на
контексты, а каждый контекст содержит правила. Контекст (context) \-
область текста, которой принадлежат особенный набор правил. Например,
область комментариев в стиле C (например между
.B /*
и
.BR */ )
имеет свой собственный цвет. Он является контекстом, не смотря на то,
что он не имеет других правил внутри себя, т.к. возможно мы не хотим
ничего подсвечивать внутри C комментария.
.PP
Простейшая секция для языка C может выглядеть так:
.PP
.nf
file .\\*\\\\.c C\\sProgram\\sFile (#include|/\\\\\\*)

wholechars abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_

# default colors
define  comment   brown
context default
  keyword  whole  if       yellow
  keyword  whole  else     yellow
  keyword  whole  for      yellow
  keyword  whole  while    yellow
  keyword  whole  do       yellow
  keyword  whole  switch   yellow
  keyword  whole  case     yellow
  keyword  whole  static   yellow
  keyword  whole  extern   yellow
  keyword         {        brightcyan
  keyword         }        brightcyan
  keyword         '*'      green

# комментарии языка C
context /\\* \\*/ comment

# Директивы препроцессора языка C
context linestart # \\n red
  keyword  \\\\\\n  brightred

# Строковые константы языка C
context " " green
  keyword  %d    brightgreen
  keyword  %s    brightgreen
  keyword  %c    brightgreen
  keyword  \\\\"   brightgreen
.fi
.PP
Каждый контекст начинается со строки вида:
.PP
.B context
.RB [ exclusive ]
.RB [ whole | wholeright | wholeleft ]
.RB [ linestart ]
.I delim
.RB [ linestart ]
.I delim
.RI [ foreground ]
.RI [ background ]
.PP
Единственное исключение составляет первый контекст. Он должен начинаться со строки вида:
.PP
.B context default
.RI [ foreground ]
.RI [ background ]
.PP
иначе
.B mcedit
возвратит ошибку. Параметр
.B linestart
определяет, что начало ограничителя
.I delim
должен совпадать с началом строки.
.B whole
option tells that
.I delim
must be a whole word.  To specify that a word must begin on the word
boundary only on the left side, you can use the
.B wholeleft
option, and similarly a word that must end on the word boundary is specified by
.BR wholeright .
.PP
The set of characters that constitute a whole word can be changed at any
point in the file with the
.B wholechars
command.  The left and right set of characters can be set separately
with
.PP
.B wholechars
.RB [ left | right ]
.I characters
.PP
The
.B exclusive
option causes the text between the delimiters to be highlighted, but not
the delimiters themselves.
.PP
Каждое правило имеет вид:
.PP
.B keyword
.RB [ whole | wholeright | wholeleft ]
.RB [ linestart ]
.I string foreground
.RI [ background ]
.PP
Context or keyword strings are interpreted, so that you can include tabs
and spaces with the sequences \\t and \\s.  Newlines and backslashes are
specified with \\n and \\\\ respectively.  Since whitespace is used as a
separator, it may not be used as is.  Also, \\* must be used to specify
an asterisk.  The * itself is a wildcard that matches any length of
characters.  For example,
.PP
.nf
  keyword         '*'      green
.fi
.PP
colors all C single character constants green.  You also could use
.PP
.nf
  keyword         "*"      green
.fi
.PP
to color string constants, but the matched string would not be allowed
to span across multiple newlines.  The wildcard may be used within
context delimiters as well, but you cannot have a wildcard as the last
or first character.
.PP
Important to note is the line
.PP
.nf
  keyword  \\\\\\n  brightgreen
.fi
.PP
Эта строка определяет ключевое слово (keyword) содержащее символ "\\" и
символ новой строки (\\n). Так как ключевые слова (keyword) имеют более
высокий приоритет чем разделители контестов, это ключевое слово (keyword)
предотвращает завершение контекста в конце строки, если строка оканчивается
символом "\". позволяя, таким образом, применять расцветку к дерективам
С\-препроцессора расположенным на нескольких строках.
.PP
Допустимые цвета: black, gray, red, brightred, green,
brightgreen, brown, yellow, blue, brightblue, magenta, brightmagenta,
cyan, brightcyan, lightgray and white.  If the syntax file is shared
with
.BR cooledit ,
it is possible to specify different colors for
.B mcedit
and
.B cooledit
by separating them with a slash, e.g.
.PP
.nf
keyword  #include  red/Orange
.fi
.PP
.B mcedit
uses the color before the slash.  See cooledit(1) for supported
.B cooledit
colors.
.PP
Comments may be put on a separate line starting with the hash sign (#).
.PP
If you are describing case insensitive language you need to use
.B caseinsensitive
derective. It should be specified at the begining of syntax file.
.PP
Ввиду простоты реализации, есть некоторые затруднительные ситуации
которые не будут обрабатываться корректно, но это мелкие раздражители.
В большинстве своём, достаточно сложные ситуации могут быть обработаны
с помощью этих простых правил. Неплохой идеей будет просмотреть несколько
файлов с правилами для изучения изящных приёмов, которые Вы можете
использовать применив немного воображения. Если Вы не можете решить
проблему с помощью моих правил, а у Вас есть правило, которое
Вы считаете будет полезным, пожалуйста напишите мне письмо с запросом
на реализацию. Однако, не просите о поддержке регулярных выражений, т.к.
это решительно невозможно.
.PP
Полезным замечанием будет: работайте с как можно большим количеством
вещей которые Вы можете сделать, чем пытайтесь реализовать вещи которые
не покрываются данной реализацией. Помните, подсветка синтаксиса должна
сокращать количество возможных ошибок, а не делать код красиво выглядящим.
.SH "ЦВЕТА"
Предопределённые цвета могут быть переопределены. Для этого необходимо
добавить новые определения в переменную окружения
.B MC_COLOR_TABLE
Например, цвета переднего и заднего фона могут быть определены
следующим образом:
.PP
.nf
MC_COLOR_TABLE="$MC_COLOR_TABLE:\\
editnormal=lightgray,black:\\
editbold=yellow,black:\\
editmarked=black,cyan"
.fi
.SH "НАСТРОЙКИ"
Большинство настроек могут изменены через графический интерфейс редактора,
при помощи диалога
.B Настройки
menu. Эти настройки сохраняются в файле
.B ~/.mc/ini
соответственно Вы можете изменять настройки редактируя этот файл. Если
специально не оговорено, то 1 обозначает включение настройки, а 0 её
отключение.
.TP
.I use_internal_edit
Эта опция игнорируется, если выполняется запуск
.BR mcedit .
.TP
.I editor_tab_spacing
Устанавливает ширину символа табуляции в пробелах. Предустановленное
значение: 8. Вам следует избегать использования значений отличных от
8-и, т.к. большинство редакторов и текстовых просмоторщиков используют
значение 8. Используйте
.B editor_fake_half_tabs
для симуляции табуляций меньшего размера.
.TP
.I editor_fill_tabs_with_spaces
Никогда не использовать символы табуляции. Вместо них будут
подставляться пробелы (ASCII 20h) в количестве определённом
настройками.
.TP
.I editor_return_does_auto_indent
Нажатие клавиши Enter будет делать отступ, в соответствии с
отступом первой строки над текущей содержащей текст.
.TP
.I editor_backspace_through_tabs
Одно нажатие клавиши Backspace будет удалять все пробелы до левой
границы, если между курсором и левой границей нет символов, кроме
как пробелов.
.TP
.I editor_fake_half_tabs
Данная настройка определяет размер половинной табуляции для тех,
кто хочет программировать с шириной табуляции равной 4-ом пробелам,
но не хочет изменять размер с 8-и (таким образом код будет отображен
в том же виде при просмотре в другой программе).  При редактировании
между текстом и левой границей, перемещение и табулирование будет
происходить по 4-е пробела, в то время как использовать будут пробелы
или табуляции для оптимального заполнения. При редактировании других
областей будет происходить вставка нормального символа табуляции.
.TP
.I editor_option_save_mode
Возможные значения 0, 1 и 2. Режим сохранения (см. также меню
"Настройки") позволяет изменить способ сохранения файла. Быстрая
запись (0) сохраняет файл, незамедлительно, сокращение размера файла до
нулевого размера и запись содержимого редактора на диск. Этот метод
является быстрым, но опасным, так как в результате какой-либо системной
ошибки во время сохранения файла, файл может стать не читаемым.
Функция сохранения в безопасном режиме (1) позволяет создавать временный
файл, в который записывается содержимое файла. В случае возникновения
проблем, оригинальный файл остается нетронутым. Когда временный файл
успешно записан, он переименовывается в имя исходного файла, тем самым
заменяя его. Наиболее безопасным методом является вариант с созданием
резервных копий (2). При котором создается резервный файл, прежде чем вы
сделаете какие-либо изменения. Вы можете задать собственное расширение
для этого файла в диалоговом окне. Обратите внимание, если вы дважды
сохраните файл то вы замените также и данные в резервном файле.
.TP
.I editor_word_wrap_line_length
вставлять перенос строки после заданного количества символов. По умолчанию: 72.
.TP
.I editor_backup_extension
символ добавляемый в начале имени резрвной копии файла. По умолчанию: "~".
.TP
.I editor_line_state
отображать строку состояния редактора. M\-n переключает сотояние.
.TP
.I editor_visible_spaces
переключение видимости символов пробелов в виде '.'
.TP
.I editor_visible_tabs
переключение видимости символов табуляции в виде '<\-\-\-\->'
.TP
.I editor_persistent_selections
не убирать выделение с блока при перемещении курсора.
.TP
.I editor_cursor_beyond_eol
позволять двигать курсор за конец строки.
.TP
.I editor_syntax_highlighting
включить подсветку синтаксиса.
.TP
.I editor_edit_confirm_save
требовать подтверждение при сохранении.
.TP
.I editor_option_typewriter_wrap
to be described
.TP
.I editor_option_auto_para_formatting
to be described
.TP
.I editor_option_save_position
сохранять позицию в файле при выходе.
.TP
.I source_codepage
символьное представление кодовой страницы для файла (CP1251, ~ \- default).
.TP
.I editor_wordcompletion_collect_entire_file
Искать слова для автодополнения с начала файла и до текущей позиции курсора
или во всём файле.

.SH РАЗНОЕ
Вы можете использовать поиск с заменой методом scanf. В начале посмотрите справку по
.B sscanf
и
.B sprintf
чтобы понять формат и как использовать данный механизм. Пример: представьте, что
требуется заменить все вхождения символа открытой скобки, трёх разделённых запятыми чисел
и закрытой скобки на слова
.IR apples ,
3-е число, слово
.I oranges
и второе число. Для этого заполните диалог Поиск с заменой следующими данными:
.PP
.nf
.B Введите строку поиска
(%d,%d,%d)
.B Введите строку для замещения
apples %d oranges %d
.B Введите порядок замещения аргументов
3,2
.fi
.PP
Последняя строка определяет, что третье, а потом и второе числа будут
использованы на место первого и второго.
.PP
Рекомендуется использовать этот инструмент с включенным параметром 
.B Спрашивать перед заменой
, т.к. совпадение будет найдено, если количество параметров совпадёт
с указанным, что не всегда верно. Кроме того
.B scanf растягивает пробельные символы под результат. Отметим, что
формат %[ scanf очень полезен при сканировании строк и пробельных символов.
.PP
Также редактор отображает символы не US кодировки (160+). При редактировании
бинарных файлов, Вам следует устанавливать
.B кодировку
7 бит в меню Midnight Commander чтобы сохранить равномерность  текста.
.SH ФАЙЛЫ
.I @prefix@/share/mc/mc.hlp
.IP
Файл помощи для этой программы.
.PP
.I @prefix@/share/mc/mc.ini
.IP
Стандартные системные настройки для  GNU Midnight
Commander используются только в случае отсутствия пользоватьлеского файла ~/.mc/ini.
.PP
.I @prefix@/share/mc/mc.lib
.IP
Глобальные настройки для Midnight Commander. Настройки в этом файле влияют
на всех пользователей, в независимости от наличия ~/.mc/ini.
.PP
.I @prefix@/share/mc/syntax/*
.IP
Глобальные файлы синтаксиса, используются только в случае, если аналогичный
файл отсутствует в ~/.mc/cedit/.
.PP
.I $HOME/.mc/ini
.IP
Личные настройки пользователя. Если файл существует, то он будет
использоваться вместо глобальных настроек.
.PP
.I $HOME/.mc/cedit/
.IP
Пользовательский каталог, где сохраняется и обрабатывается помеченный текст.
.SH ЛИЦЕНЗИЯ
Эта программа распространяется в надежде, что она будет полезной,
но БЕЗ ВСЯКИХ ГАРАНТИЙ, в том числе подразумеваемых гарантий ТОВАРНОГО
СОСТОЯНИЯ ПРИ ПРОДАЖЕ и ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО ПРИМЕНЕНИЯ. Смотрите
Стандартную Общественную Лицензию GNU для получения дополнительной
информации. Полный текст лицензии смотрите на http://www.gnu.org/licenses/.
.SH ДОСТУПНОСТЬ
Последняя версия программы может быть найдена на
http://midnight\-commander.org/.
.SH СМОТРИ ТАКЖЕ
cooledit(1), mc(1), gpm(1), terminfo(1), scanf(3).
.SH АВТОРЫ
Paul Sheer (psheer@obsidian.co.za) - создатель встроенного редактора Midnight Commander.
Ilia Maslakov (il.smind@gmail.com)
Mikhail Pobolovets (styx.mp@gmail.com)
.SH ОШИБКИ
Вы можете оставить сообщение об ошибках на http://www.midnight-commander.org/
или отправить письмо на mc-devel (at) gnome (dot) org
